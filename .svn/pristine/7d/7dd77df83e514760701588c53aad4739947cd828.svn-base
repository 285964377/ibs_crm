<?php
//角色控制器
namespace Home\Controller;
class RoleController extends BackController {
	public function index(){
		if($_GET['index']){
			$this->display();
		}
		if($_GET['search_data']){
			$page = (I('get.page') != '') ? I('get.page')-1 : 0;    //页码
			$num = (I('get.limit') != '') ? I('get.limit') : 10;        //每页条数
			if(I('get.search')){
				$where=array(
					'title'=>array('like',"%".I('get.search')."%")
				);
			}else{
				$where=array(
					'id'=>array('neq','1')
				);
			}
			$where['id'] = array('neq','1');
			$data =M('group_role')
				->where($where)
				->limit($page*$num,$num)
				->select();
			$list['code'] = 0;
			$list['msg'] = '';
			$list['data'] = $data;
			$list['count'] =  M('group_role')->where($where)->count();
			echo json_encode($list,true);
			exit;
		}
	}
		
	public function add(){
		if(IS_POST){
			$data['rules'] = I('post.id');
			$data['title'] = I('post.title');
			$data['descript'] =  I('post.descript');
			$id = M('group_role')->add($data);
			$this->operation_log('c','新增角色');
			echo json_encode(["code"=>0,"msg"=>"新增角色成功"],true);
			exit;
		}else{
				//获取权限队列
			$rule = M('group_rule')->order('id ASC')->select();
			$result =  [];  //初始化一个数组
			foreach($rule as $k=>$v){
				  $type = explode('/',$v['name'])[0];
				  if(!$type){
					  continue;
				  }
				  if($type == "Part") $type="部门管理";
				  if($type == "User") $type="员工管理";
				  if($type == "Role") $type="角色管理";
				  if($type == "Operlog") $type="操作记录";
				  
			
				  $result[$type][]    =   $v;  //根据initial 进行数组重新赋值
			}
			$this->assign('result',$result);
			$this->display();
		}
	}
	
	public function edit(){
		if(IS_GET){
			//获取当前角色信息
			$where['id'] = array('eq',I('get.id'));
			$role = M('group_role')->where($where)->find();
			$this->assign('role',$role);
					//获取权限队列
			$rule = M('group_rule')->order('id ASC')->select();
			$result =   [];  //初始化一个数组
			foreach($rule as $k=>$v){
				$type = explode('/',$v['name'])[0];
				if(!$type){
					continue;
				}
				if($type == "Part") $type="部门管理";
				if($type == "User") $type="员工管理";
				if($type == "Role") $type="角色管理";
				if($type == "Operlog") $type="操作记录";
				$result[$type][]    =   $v;  //根据initial 进行数组重新赋值
			}
			$this->assign('result',$result);
			$this->display();
		}
		if(IS_POST){
			$id = I('post.rid');
			$data['rules'] = I('post.id');
			$data['title'] = I('post.title');
			$data['descript'] =  I('post.descript');
		    $re =  M('group_role')->where('id='.$id)->find();
			$id = M('group_role')->where('id='.$id)->save($data);
			$this->operation_log('u','修改角色');
			echo json_encode(["code"=>0,"msg"=>"编辑角色成功"],true);
		}
	}
		
	public function delete(){
		$uid = I('get.id');
		$where['id'] = array('in',$uid);
		//判断本角色是否在使用中
		$where_a['role_id'] = array('in',$uid);
		if( M('admin')->where($where_a)->find()){
				echo json_encode(["code"=>"ERROR","msg"=>"包含正在使用中的角色！无法删除，请在管理员列表中检查角色"],true);
				exit;
		}
        $re = M('group_role')->where($where)->select();
		//同时删除角色关联表
		$where_g['group_id'] = array('in',$uid);
		M('group_access')->where($where_g)->delete();
		M('group_role')->where($where)->delete();
		$this->operation_log('d','删除角色');
		echo json_encode(["code"=>0,"msg"=>"删除成功"],true);
		
	}
}